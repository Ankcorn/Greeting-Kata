'use strict';

const test = require('ava');
const { greet, isShouting, group } = require('../index');

test('Greeting', t => {
    const greeting = greet("Tom");
    t.is(greeting, "Hello, Tom.");
});

test('Greeting handles null', t => {
    const greeting = greet();
    t.is(greeting, "Hello, my friend.");
});

test('Greeting shouts back', t => {
    const greeting = greet("JERRY");
    t.is(greeting, "HELLO, JERRY!");
});

test('isShouting returns true if message was all caps', t => {
    const shouting = isShouting("ANGRY SHOUTING");
    t.is(shouting, true);
});

test('isShouting returns true if message was all caps', t => {
    const shouting = isShouting("quietness");
    t.is(shouting, false);
});

test('Greeting can handle 2 names', t => {
    const greeting = greet(['Tom', 'Helena']);
    t.is(greeting, "Hello, Tom and Helena.");
});

test('Greeting can handle multiple names', t => {
    const greeting = greet(['Tom', 'Helena', 'Pirastero']);
    t.is(greeting, "Hello, Tom, Helena, and Pirastero.");
});

test('Greeting can parse weird strings', t => {
    const greeting = greet(["Pirastero", "Helena, Thomas"]);
    t.is(greeting, "Hello, Pirastero, Helena, and Thomas");
});

test('Group splits array of names into formatted string', t => {
    const names = group(["Test", "Test"]);
    t.is(names, "Test and Test");
});
//# sourceMappingURL=/Users/tankcorn/Projects/Greeting Kata/node_modules/.cache/ava/344a32d3ba5323e3c4af3b2b067f0d04.js.map