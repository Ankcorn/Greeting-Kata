{"version":3,"sources":["greeting.test.js"],"names":["test","require","greet","isShouting","group","oxfordComma","t","greeting","is","shouting","names"],"mappings":";;AAAA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAM,EAACC,KAAD,EAASC,UAAT,EAAqBC,KAArB,EAA4BC,WAA5B,KAA0CJ,QAAQ,UAAR,CAAhD;;AAEAD,KAAK,UAAL,EAAiBM,KAAK;AACnB,UAAMC,WAAWL,MAAM,KAAN,CAAjB;AACAI,MAAEE,EAAF,CAAKD,QAAL,EAAe,aAAf;AACF,CAHD;;AAKAP,KAAK,uBAAL,EAA8BM,KAAK;AAC/B,UAAMC,WAAWL,OAAjB;AACAI,MAAEE,EAAF,CAAKD,QAAL,EAAe,mBAAf;AACH,CAHD;;AAKAP,KAAK,sBAAL,EAA6BM,KAAK;AAC9B,UAAMC,WAAWL,MAAM,OAAN,CAAjB;AACAI,MAAEE,EAAF,CAAKD,QAAL,EAAe,eAAf;AACH,CAHD;;AAKAP,KAAK,iDAAL,EAAwDM,KAAK;AACzD,UAAMG,WAAWN,WAAW,gBAAX,CAAjB;AACAG,MAAEE,EAAF,CAAKC,QAAL,EAAe,IAAf;AACH,CAHD;;AAKAT,KAAK,iDAAL,EAAwDM,KAAK;AACzD,UAAMG,WAAWN,WAAW,WAAX,CAAjB;AACAG,MAAEE,EAAF,CAAKC,QAAL,EAAe,KAAf;AACH,CAHD;;AAKAT,KAAK,6BAAL,EAAoCM,KAAK;AACrC,UAAMC,WAAWL,MAAM,CAAC,KAAD,EAAQ,QAAR,CAAN,CAAjB;AACAI,MAAEE,EAAF,CAAKD,QAAL,EAAe,wBAAf;AACH,CAHD;;AAKAP,KAAK,oCAAL,EAA2CM,KAAK;AAC5C,UAAMC,WAAWL,MAAM,CAAC,KAAD,EAAO,QAAP,EAAiB,WAAjB,CAAN,CAAjB;AACAI,MAAEE,EAAF,CAAKD,QAAL,EAAe,oCAAf;AACH,CAHD;;AAKAP,KAAK,kCAAL,EAAyCM,KAAK;AAC1C,UAAMC,WAAWL,MAAM,CAAC,WAAD,EAAc,gBAAd,CAAN,CAAjB;AACAI,MAAEE,EAAF,CAAKD,QAAL,EAAe,sCAAf;AACH,CAHD;;AAKAP,KAAK,4DAAL,EAAmEM,KAAK;AACpE,UAAMI,QAAQN,MAAM,CAAC,MAAD,EAAS,MAAT,CAAN,CAAd;AACAE,MAAEE,EAAF,CAAKE,KAAL,EAAW,eAAX;AACH,CAHD;;AAKAV,KAAK,6FAAL,EAAoGM,KAAK;AACrG,UAAMI,QAAQN,MAAM,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAN,CAAd;AACH,CAFD","file":"greeting.test.js","sourcesContent":["const test = require('ava');\nconst {greet , isShouting, group, oxfordComma}= require('../index');\n\ntest('Greeting', t => {\n   const greeting = greet(\"Tom\");\n   t.is(greeting, \"Hello, Tom.\")\n});\n\ntest('Greeting handles null', t => {\n    const greeting = greet();\n    t.is(greeting, \"Hello, my friend.\");\n});\n\ntest('Greeting shouts back', t => {\n    const greeting = greet(\"JERRY\");\n    t.is(greeting, \"HELLO, JERRY!\")\n});\n\ntest('isShouting returns true if message was all caps', t => {\n    const shouting = isShouting(\"ANGRY SHOUTING\");\n    t.is(shouting, true)\n});\n\ntest('isShouting returns true if message was all caps', t => {\n    const shouting = isShouting(\"quietness\");\n    t.is(shouting, false);\n});\n\ntest('Greeting can handle 2 names', t => {\n    const greeting = greet(['Tom', 'Helena']);\n    t.is(greeting, \"Hello, Tom and Helena.\");\n});\n\ntest('Greeting can handle multiple names', t => {\n    const greeting = greet(['Tom','Helena', 'Pirastero']);\n    t.is(greeting, \"Hello, Tom, Helena, and Pirastero.\");\n});\n\ntest('Greeting can parse weird strings', t => {\n    const greeting = greet([\"Pirastero\", \"Helena, Thomas\"]);\n    t.is(greeting, \"Hello, Pirastero, Helena, and Thomas\")\n});\n\ntest('Group splits array of 2 names into string delimited by and', t => {\n    const names = group([\"Test\", \"Test\"]);\n    t.is(names,\"Test and Test\");\n});\n\ntest('Group splits array of 3 or mote names into string delimited by , and the last name by , and', t => {\n    const names = group([\"Test\", \"Test\", \"Test\"]);\n})"]}